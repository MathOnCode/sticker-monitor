name: Executar Monitor de Stickers

on:
  workflow_dispatch:
    inputs:
      ambiente:
        description: 'Ambiente de execução'
        required: false
        default: 'production'

jobs:
  run-monitor:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Adiciona permissão de escrita

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Token com permissões de escrita

    - name: Configurar Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Atualizar status para processando
      run: |
        echo '{"processing": true, "last_update": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")", "message": "Processando dados..."}' > status.json
        git add status.json
        git commit -m "🔄 Status: Processando" || echo "Sem mudanças para commitar (processando)"
        git push

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instalar dependências
      run: |
        pip install -r monitor_de_stickers/requirements.txt

    - name: Executar monitor
      run: |
        python monitor_de_stickers/monitor.py --ambiente ${{ github.event.inputs.ambiente }}

    - name: Verificar se arquivo foi criado
      run: |
        echo "Conteúdo do diretório:"
        ls -la
        if [ -f "stickers_data.json" ]; then
          echo "✅ Arquivo stickers_data.json encontrado!"
          echo "📊 Conteúdo inicial:"
          head -n 5 stickers_data.json
        else
          echo "❌ ERRO: Arquivo não foi criado!"
          exit 1
        fi

    - name: Fazer commit das alterações (stickers_data.json)
      run: |
        git add stickers_data.json
        # Verifica se há mudanças para commitar
        if git diff --staged --quiet; then
          echo "ℹ️  Nenhuma mudança detectada no arquivo stickers_data.json."
        else
          git commit -m "🔄 Atualização automática: stickers_data.json"
          git push
          echo "✅ Mudanças commitadas e pushed!"
        fi

    - name: Atualizar status para concluído
      if: success()
      run: |
        echo '{"processing": false, "last_update": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")", "message": "Processamento concluído com sucesso"}' > status.json
        git add status.json
        git commit -m "✅ Status: Concluído" || echo "Sem mudanças para commitar (concluído)"
        git push

    - name: Atualizar status para falha
      if: failure()
      run: |
        echo '{"processing": false, "last_update": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")", "message": "Falha no processamento"}' > status.json
        git add status.json
        git commit -m "❌ Status: Falha" || echo "Sem mudanças para commitar (falha)"
        git push
